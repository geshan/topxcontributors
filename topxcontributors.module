<?php
// $Id: topxcontributors.module
// @file emailoverrides.module - module to overried email module


/**
 * implementation of hook_menu
 * @return array $items
 */
function topxcontributors_menu() {
  
  $items['admin/settings/topxcontributors'] = array(
    'title' => 'Top X Contributors Settings',
    'description' => 'Set node types to show block with limit',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('topxcontributors_settings_form'),
    'access arguments'  => array('administer nodes'),
    'file' => 'topxcontributors.admin.inc',
    'weight' => 1,
  );
  
  return $items;
}

/**
 * implemntation of hook_block
 * @param string $op
 * @param string $delta
 * @param array $edit
 * @return string $block or $blocks
 */
function topxcontributors_block($op = 'list', $delta = 0, $edit = array()) {
  $nodetypes = variable_get('topxcontributors_nodetypes', 'blog');
  switch($op) {
    case 'list':
        //dsm($nodetypes);
        foreach($nodetypes as $k => $nodetype) {
          $blocks[$k]['info'] = t('Top @nodetype Contributors', array('@nodetype' => $nodetype));
          $blocks[$k]['cache'] = BLOCK_NO_CACHE;
          
        }
        return $blocks;
      break;
    case 'view':
      $i = 0;
      foreach($nodetypes as $k => $nodetype) {
        if($delta == $k) {
          $limit = variable_get('topxcontributors_xvalue', 5);
          $block['subject'] = t('Top @nodetype Contributors', array('@nodetype' => $nodetype));
          $block['content'] = topxcontiributors_get_block_body($nodetype, $limit);
        }
      }//foreach nodetyeps close
      return $block;  
      break;
  }  
}

/**
 * Function to generate the body of the required block
 * @param string $nodetype
 * @param int $limit
 * @return string
 */
function topxcontiributors_get_block_body($nodetype, $limit) {
  $sql = "SELECT 
            users.uid, users.name, count(node.nid) AS count 
          FROM 
            users INNER JOIN node ON node.uid = users.uid 
            AND node.status = 1 
            AND node.type IN ('%s') 
          GROUP BY 
            users.uid 
          ORDER BY 
            count DESC 
            , users.name ASC
          LIMIT 0,%d";
  
  $result = db_query($sql, $nodetype, $limit);
  if($result) {
    $list = array();
    $i = 0; //even acts as counter; as $num_rows in http://drupal.org/node/114774#db-num-rows
    while($res = db_fetch_array($result)){
      topxcontributors_set_list_with_user_load($list, $i, $res['uid'], $res['count']);
      $i++;      
    }
    if($i != 0) {
      return theme_item_list($list);    
    }
    else {
      return t('No posts found');
    }
  }//$result if close
}

/**
 * Function to build the array to show as list with user name and count
 * @param array $list
 * @param int $i
 * @param int $uid
 * @param int $count
 */
function topxcontributors_set_list_with_user_load(&$list, $i, $uid, $count) {
  $account = user_load($uid);
  if($account->name) {
    $list[$i] = l($account->name, 'user/'. $account->uid);
    $list[$i] .= ' ('. $count .')';
  }
}